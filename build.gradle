plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.8.0'
    id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = "$project.mod_version+$project.minecraft_version"
group = project.maven_group

sourceSets {
    data {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }

    main {
        resources.srcDir 'src/generated/resources'
    }
}

loom {
    accessWidenerPath = file('src/main/resources/woods_and_mires.accesswidener')

    mods {
        woods_and_mires {
            sourceSet 'main'
        }

        woods_and_mires_data {
            sourceSet 'data'
        }
    }

    runs {
        data {
            inherit server
            source 'data'
            name = 'Data Generator'
            vmArg '-Dfabric-api.datagen'
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
            runDir 'build/dataGenerator'
        }
    }
}

repositories {
    maven {
        url = "https://maven.minecraftforge.net"
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "com.github.glitchfiend:TerraBlender-fabric:$project.terrablender_version"

    dataImplementation sourceSets.main.output
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

jar {
    from "COPYING", "COPYING.LESSER"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
